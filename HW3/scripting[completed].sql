/* #1. DETERMINE THE TOTAL EXPENSE AMOUNT FOR THE DIFFERENT TYPES IN ASCENDING ORDER */
SELECT TYPE,SUM(AMOUNT) FROM EXPENSE GROUP BY TYPE ORDER BY SUM(AMOUNT),TYPE;

/* #2. SHOW TOTAL # OF TRIPS APPROVED FOR EACH DEPARTMENT // SHOW DEPARTMENT NAME AND TOTAL NUMBER OF TRIPS */
SELECT DISTINCT DEPT.NAME, COUNT(EMPLOYEE.DEPT) FROM EMPLOYEE INNER JOIN TRIP ON EMPLOYEE.ID = TRIP.EMP_ID JOIN DEPT ON DEPT.CODE = EMPLOYEE.DEPT GROUP BY DEPT.NAME;

/* #3. TRIP TAABLE TO SHOW THE NUMBER OF TRIPS WHERE DEPATURE AND RETURN HAPPEN */
-- SELECT COUNT(Dep_Date) FROM Trip WHERE Dep_Date = ANY(SELECT Return_Date FROM TRIP);
  -- THIS SCRIPT IS WRONG ^^^^


/* #4. APPROVED TRIPS -> SHOW CORRESPONDING EMPLOYEE NAME/DEPARTURE/CITY/SUBMITTED REC */
SELECT EMPLOYEE.NAME, TRIP.DEP_DATE, TRIP.TO_CITY ,EXPENSE.SUBMITTED FROM EMPLOYEE INNER JOIN TRIP ON EMPLOYEE.ID = TRIP.EMP_ID JOIN EXPENSE ON TRIP.ID = EXPENSE.TRIP_ID;

/* #5. FIND OUT THE TRIPS FOR WHICH THE ESIMATED COST IS LESS THAN ACTUAL EXPENSE. */
-- SELECT EXPENSE.TRIP_ID,SUM(EXPENSE.AMOUNT), TRIP.EST_COST FROM EXPENSE INNER JOIN TRIP ON EXPENSE.TRIP_ID = TRIP.ID WHERE (TRIP.EST_COST < EXPENSE.AMOUNT) GROUP BY EXPENSE.TRIP_ID,TRIP.EST_COST;
  -- THIS SCRIPT IS WRONG ^^^^
