Set serveroutput ON;
DECLARE
ID_INCREMENT INTEGER;
INSERT_EMP_ID INTEGER;
EMP_F NUMBER;
INSERT_TO_CITY CHAR(15);
INSERT_DEP_DATE DATE;
INSERT_RETURN_DATE DATE;
INSERT_EST_COST DECIMAL(6,2);
BEGIN
INSERT_EMP_ID       :=  &INSERT_EMP_ID;
INSERT_TO_CITY      :=  UPPER('&INSERT_TO_CITY');
INSERT_DEP_DATE     :=  TO_DATE('&INSERT_DEP_DATE','DD-MM-YYYY');
INSERT_RETURN_DATE  :=  TO_DATE('&INSERT_RETURN_DATE','DD-MM-YYYY');
INSERT_EST_COST     :=  &INSERT_EST_COST;
dbms_output.put_line('[INT 4]        EMPLOYEE ID  : '     || INSERT_EMP_ID);
dbms_output.put_line('[CHAR 15]      TO CITY      : '     || INSERT_TO_CITY);
dbms_output.put_line('[DD/MM/YYYY]   Dep DATE     : '     || INSERT_DEP_DATE);
dbms_output.put_line('[DD/MM/YYYY]   RET DATE     : '     || INSERT_RETURN_DATE);
dbms_output.put_line('[DEC 6,2]      EST COST     : '     || INSERT_EST_COST);
SELECT COUNT(*) INTO EMP_F FROM TRIP WHERE EMP_ID = INSERT_EMP_ID;
IF (EMP_F = 0) THEN
  dbms_output.put_line('ERROR:  INVALID EMPLOYEE ID');
  dbms_output.put_line('[TERMINATING]');
  RETURN;
Else
    dbms_output.put_line('EMPLOYEE ID MATCHED');
END IF;
IF (INSERT_RETURN_DATE < INSERT_DEP_DATE) THEN
    dbms_output.put_line('ERROR:  DEPATURE DATE IS AFTER RETURN DATE');
    dbms_output.put_line('[TERMINATING]');
    RETURN;
Else
    dbms_output.put_line('DATES ARE VALID');
END IF;
IF (INSERT_EST_COST < 1.00 OR INSERT_EST_COST > 4000.00) THEN
    dbms_output.put_line('ERROR:  ESTIMATED COST IS NOT IN RANGE: 1.00 TO 4000.00');
    dbms_output.put_line('[TERMINATING]');
    RETURN;
ELSE
    dbms_output.put_line('ESTIMATED COST IS VALID');
END IF;
    SELECT MAX(ID) INTO ID_INCREMENT FROM TRIP;
    ID_INCREMENT := ID_INCREMENT + 1;
    INSERT INTO Trip (ID,Emp_ID,To_City,Dep_Date,Return_Date,Est_Cost)
    VALUES (ID_INCREMENT,INSERT_EMP_ID,INSERT_TO_CITY,INSERT_DEP_DATE,INSERT_RETURN_DATE,INSERT_EST_COST);
    dbms_output.put_line('[INSERTION COMPLETED]');
END;
/


SQL> @/home/lc002/hw5/CAMPBELL.sql;
Enter value for insert_emp_id: 2
old  10: INSERT_EMP_ID       :=  &INSERT_EMP_ID;
new  10: INSERT_EMP_ID       :=  2;
Enter value for insert_to_city: JAPAN
old  11: INSERT_TO_CITY      :=  UPPER('&INSERT_TO_CITY');
new  11: INSERT_TO_CITY      :=  UPPER('JAPAN');
Enter value for insert_dep_date: 20-04-2018
old  12: INSERT_DEP_DATE     :=  TO_DATE('&INSERT_DEP_DATE','DD-MM-YYYY');
new  12: INSERT_DEP_DATE     :=  TO_DATE('20-04-2018','DD-MM-YYYY');
Enter value for insert_return_date: 20-04-2018
old  13: INSERT_RETURN_DATE  :=  TO_DATE('&INSERT_RETURN_DATE','DD-MM-YYYY');
new  13: INSERT_RETURN_DATE  :=  TO_DATE('20-04-2018','DD-MM-YYYY');
Enter value for insert_est_cost: 200.00
old  14: INSERT_EST_COST     :=  &INSERT_EST_COST;
new  14: INSERT_EST_COST     :=  200.00;
[INT 4]        EMPLOYEE ID  : 2                                                 
[CHAR 15]      TO CITY      : JAPAN                                             
[DD/MM/YYYY]   Dep DATE     : 20-APR-18                                         
[DD/MM/YYYY]   RET DATE     : 20-APR-18                                         
[DEC 6,2]      EST COST     : 200                                               
ERROR:  INVALID EMPLOYEE ID                                                     
[TERMINATING]                                                                   

PL/SQL procedure successfully completed.

SQL> @/home/lc002/hw5/CAMPBELL.sql;
Enter value for insert_emp_id: 2000
old  10: INSERT_EMP_ID       :=  &INSERT_EMP_ID;
new  10: INSERT_EMP_ID       :=  2000;
Enter value for insert_to_city: JAPAN
old  11: INSERT_TO_CITY      :=  UPPER('&INSERT_TO_CITY');
new  11: INSERT_TO_CITY      :=  UPPER('JAPAN');
Enter value for insert_dep_date: 20-04-2018
old  12: INSERT_DEP_DATE     :=  TO_DATE('&INSERT_DEP_DATE','DD-MM-YYYY');
new  12: INSERT_DEP_DATE     :=  TO_DATE('20-04-2018','DD-MM-YYYY');
Enter value for insert_return_date: 19-04-2018
old  13: INSERT_RETURN_DATE  :=  TO_DATE('&INSERT_RETURN_DATE','DD-MM-YYYY');
new  13: INSERT_RETURN_DATE  :=  TO_DATE('19-04-2018','DD-MM-YYYY');
Enter value for insert_est_cost: 200.00
old  14: INSERT_EST_COST     :=  &INSERT_EST_COST;
new  14: INSERT_EST_COST     :=  200.00;
[INT 4]        EMPLOYEE ID  : 2000                                              
[CHAR 15]      TO CITY      : JAPAN                                             
[DD/MM/YYYY]   Dep DATE     : 20-APR-18                                         
[DD/MM/YYYY]   RET DATE     : 19-APR-18                                         
[DEC 6,2]      EST COST     : 200                                               
EMPLOYEE ID MATCHED                                                             
ERROR:  DEPATURE DATE IS AFTER RETURN DATE                                      
[TERMINATING]                                                                   

PL/SQL procedure successfully completed.

SQL> @/home/lc002/hw5/CAMPBELL.sql;
Enter value for insert_emp_id: 2000
old  10: INSERT_EMP_ID       :=  &INSERT_EMP_ID;
new  10: INSERT_EMP_ID       :=  2000;
Enter value for insert_to_city: JAPAN
old  11: INSERT_TO_CITY      :=  UPPER('&INSERT_TO_CITY');
new  11: INSERT_TO_CITY      :=  UPPER('JAPAN');
Enter value for insert_dep_date: 20-04-2018
old  12: INSERT_DEP_DATE     :=  TO_DATE('&INSERT_DEP_DATE','DD-MM-YYYY');
new  12: INSERT_DEP_DATE     :=  TO_DATE('20-04-2018','DD-MM-YYYY');
Enter value for insert_return_date: 20-04-2018
old  13: INSERT_RETURN_DATE  :=  TO_DATE('&INSERT_RETURN_DATE','DD-MM-YYYY');
new  13: INSERT_RETURN_DATE  :=  TO_DATE('20-04-2018','DD-MM-YYYY');
Enter value for insert_est_cost: 0.01
old  14: INSERT_EST_COST     :=  &INSERT_EST_COST;
new  14: INSERT_EST_COST     :=  0.01;
[INT 4]        EMPLOYEE ID  : 2000                                              
[CHAR 15]      TO CITY      : JAPAN                                             
[DD/MM/YYYY]   Dep DATE     : 20-APR-18                                         
[DD/MM/YYYY]   RET DATE     : 20-APR-18                                         
[DEC 6,2]      EST COST     : .01                                               
EMPLOYEE ID MATCHED                                                             
DATES ARE VALID                                                                 
ERROR:  ESTIMATED COST IS NOT IN RANGE: 1.00 TO 4000.00                         
[TERMINATING]                                                                   

PL/SQL procedure successfully completed.

SQL> @/home/lc002/hw5/CAMPBELL.sql;
Enter value for insert_emp_id: 2000
old  10: INSERT_EMP_ID       :=  &INSERT_EMP_ID;
new  10: INSERT_EMP_ID       :=  2000;
Enter value for insert_to_city: JAPAN
old  11: INSERT_TO_CITY      :=  UPPER('&INSERT_TO_CITY');
new  11: INSERT_TO_CITY      :=  UPPER('JAPAN');
Enter value for insert_dep_date: 20-04-2018
old  12: INSERT_DEP_DATE     :=  TO_DATE('&INSERT_DEP_DATE','DD-MM-YYYY');
new  12: INSERT_DEP_DATE     :=  TO_DATE('20-04-2018','DD-MM-YYYY');
Enter value for insert_return_date: 20-04-2018
old  13: INSERT_RETURN_DATE  :=  TO_DATE('&INSERT_RETURN_DATE','DD-MM-YYYY');
new  13: INSERT_RETURN_DATE  :=  TO_DATE('20-04-2018','DD-MM-YYYY');
Enter value for insert_est_cost: 4000.01
old  14: INSERT_EST_COST     :=  &INSERT_EST_COST;
new  14: INSERT_EST_COST     :=  4000.01;
[INT 4]        EMPLOYEE ID  : 2000                                              
[CHAR 15]      TO CITY      : JAPAN                                             
[DD/MM/YYYY]   Dep DATE     : 20-APR-18                                         
[DD/MM/YYYY]   RET DATE     : 20-APR-18                                         
[DEC 6,2]      EST COST     : 4000.01                                           
EMPLOYEE ID MATCHED                                                             
DATES ARE VALID                                                                 
ERROR:  ESTIMATED COST IS NOT IN RANGE: 1.00 TO 4000.00                         
[TERMINATING]                                                                   

PL/SQL procedure successfully completed.

SQL> @/home/lc002/hw5/CAMPBELL.sql;
Enter value for insert_emp_id: 2000
old  10: INSERT_EMP_ID       :=  &INSERT_EMP_ID;
new  10: INSERT_EMP_ID       :=  2000;
Enter value for insert_to_city: JAPAN
old  11: INSERT_TO_CITY      :=  UPPER('&INSERT_TO_CITY');
new  11: INSERT_TO_CITY      :=  UPPER('JAPAN');
Enter value for insert_dep_date: 20-04-2018
old  12: INSERT_DEP_DATE     :=  TO_DATE('&INSERT_DEP_DATE','DD-MM-YYYY');
new  12: INSERT_DEP_DATE     :=  TO_DATE('20-04-2018','DD-MM-YYYY');
Enter value for insert_return_date: 20-04-2018
old  13: INSERT_RETURN_DATE  :=  TO_DATE('&INSERT_RETURN_DATE','DD-MM-YYYY');
new  13: INSERT_RETURN_DATE  :=  TO_DATE('20-04-2018','DD-MM-YYYY');
Enter value for insert_est_cost: 4000.00
old  14: INSERT_EST_COST     :=  &INSERT_EST_COST;
new  14: INSERT_EST_COST     :=  4000.00;
[INT 4]        EMPLOYEE ID  : 2000                                              
[CHAR 15]      TO CITY      : JAPAN                                             
[DD/MM/YYYY]   Dep DATE     : 20-APR-18                                         
[DD/MM/YYYY]   RET DATE     : 20-APR-18                                         
[DEC 6,2]      EST COST     : 4000                                              
EMPLOYEE ID MATCHED                                                             
DATES ARE VALID                                                                 
ESTIMATED COST IS VALID                                                         
[INSERTION COMPLETED]                                                           

PL/SQL procedure successfully completed.

SQL> SELECT * FROM TRIP;

        ID     EMP_ID TO_CITY         DEP_DATE  RETURN_DA   EST_COST            
---------- ---------- --------------- --------- --------- ----------            
         1       1000 DALLAS          12-JAN-16 18-JAN-16       2000            
         2       2000 CHICAGO         04-APR-18 06-APR-18       1500            
         3       1000 NEW ORLEANS     13-FEB-13 20-FEB-13       1200            
         4       4000 DENVER          22-JAN-10 30-JAN-10        200            
         5       5000 KANSAS CITY     30-JUL-19 31-JUL-19         30            
         6       6000 TOPEKA          23-AUG-38 23-AUG-38          1            
         7       7000 SCRANTON        11-SEP-48 11-SEP-48        263            
         8       8000 SEATTLE         05-OCT-58 15-OCT-58       4000            
         9       9000 KNOXVILLE       05-NOV-38 10-NOV-38    3563.58            
        10       1001 NEW YORK CITY   01-DEC-28 12-DEC-28     3434.2            
        11       2000 JAPAN           20-APR-18 20-APR-18        200            

        ID     EMP_ID TO_CITY         DEP_DATE  RETURN_DA   EST_COST            
---------- ---------- --------------- --------- --------- ----------            
        12       2000 JAPAN           20-APR-18 20-APR-18       4000            

12 rows selected.

SQL> SPOOL OFF